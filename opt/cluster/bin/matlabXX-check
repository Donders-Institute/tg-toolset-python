#!/bin/bash
#
# Determine whether the user is allowed to start (another) matlab session
# on the mentat cluster.  The script results in a return value of 0 if
# the user is allowed to start another matlab session and a return value
# of 1 if the user is not allowed to start another session.
# 
# this script depends on the "cluster-matlab" script to determine the number of
# matlab sessions running on each node and by each user
#
# 15jul2006 - roboos: implemented
# 15jul2006 - roboos: switched from using "cluster-matlab" to "lmstat"
# 29nov2006 - roboos: added extra test for dual-CPU machines, they are not bigmem
# 20mar2007 - bradaa: changed cpu count for odin to 8!
# 29jul2008 - roboos: incremented usermax from 3 to 4
# 13oct2009 - martyc: removed chuncky from line 32
#			changed  line 75 from 2 to 4 otherwise the default mentats are counted as the big mentat machines which they are not!
#                     changed old bigmemmentat vs cpu vs user check to work better with the number of cpu's on all mentats
# 27aug2010 - roboos: added caracal as lab machine
# 07sep2010 - roboos: changed the phrasing of the user feedback, incremented the allowed number for public to 8
# 05oct2010 - roboos: incremented the allowed number for public to 20
# 02nov2010 - roboos: decreased the allowed number for public to 10
# 16nov2010 - roboos: incremented the allowed number for public to 16
# 15mar2011 - roboos: increased number for public to 18 and for everyone else to 5
# 16mar2011 - roboos: increased number for public to 20 and reduced it for everyone else to 4
# 26may2011 - roboos: decreased number for public to 18, extended daytime to 19h
# 17jun2011 - roboos: allow infinite number of matlabs on mentat007
# 04jul2011 - roboos: allow infinite number of matlabs on mentat006
# 01sep2011 - roboos: small code restructuring to speed up on bigmem machines
# 22sep2011 - roboos: allow infinite number of matlabs on mentat005 and mentat999
# 05oct2011 - roboos: allow infinite number of matlabs on mentat319-mentat322
# 05oct2011 - edwger: allow infinite number of matlabs for (local)user meduser
# 05oct2011 - roboos: use PBS environment variable to detect whether running as Torque job
# 07dec2011 - roboos: dont start matlab on mentat001 and mentat002
# 21dec2011 - roboos: allow a user to start a second matlab on the same machine in office hours
# 11dec2012 - roboos: removed cms from intranet URL
# 20apr2013 - edwger: excluse linux vm's from check (still work in progress)
# 02may2013 - edwger: created a more general if-statement check for torque-frontends mentat001/002/003.../009

# which lmstat to use -> this is used to count the matlab licenses
LMSTAT="$CLUSTER_UTIL_ROOT/bin/lmstat -f MATLAB"

# use the short hostname
HOSTNAME=`hostname -s`

##############################################################################
# this line can be uncommented to quickly disable the test completely
##############################################################################
# exit 0

#if [ "$HOSTNAME" == "mentat001" -o "$HOSTNAME" == "mentat002" ]; then
if [[ `hostname -s` = mentat00[0-9] ]]; then
# mentat00x should not be used for matlab
cat << EOF
--------------------------------------------------------------------------------
MATLAB is not supported on mentat001, mentat002 or mentat003.

These machines serve as general login and VNC server nodes and you
should not run computationally intensive jobs on them. Please refer to
https://intranet.donders.ru.nl/index.php?id=3832 for details on how to
start MATLAB on the mentat cluster.
--------------------------------------------------------------------------------
EOF
exit 1
fi

# todo: don't treat linux desktop vm's as mentats....
#if [ "$HOSTNAME" == "localhost" ]; then
#  # all the linux VM's on the desktop are called localhost and should be able
#  # to run matlab
#  exit 0
#fi

if   [ "$PBS_ENVIRONMENT" == "PBS_BATCH" ]; then
  # batch jobs on torque allow an infinite number of matlabs
  exit 0
elif [ "$PBS_ENVIRONMENT" == "PBS_INTERACTIVE" ]; then
  # interactive jobs on torque allow an infinite number of matlabs
  exit 0
elif [ "$USER" == "meduser" ]; then
  # user meduser allows an infinite number of matlabs
  exit 0
fi

# count the number of CPUs of this mentat node
cpucount=`cat /proc/cpuinfo | grep processor | wc -l`

# determine the amount of available memory on this mentat node
memcount=`cat /proc/meminfo | grep MemTotal | awk -F " " '{ print $2 }'`

# make an exception for the lab machines -> treat them like a single CPU machine
# On the lab machines, hyperthreading may be enabled.
if [ $HOSTNAME == serval ] ; then
  cpucount=1
elif [ $HOSTNAME == caracal ] ; then
  cpucount=1
elif [ $HOSTNAME == loke   ] ; then
  cpucount=1
elif [ $HOSTNAME == thor   ] ; then
  cpucount=1
elif [ $HOSTNAME == odin   ] ; then
  cpucount=8
fi

# count the number of matlab licenses in use on this mentat node
# nodenum=`/opt/cluster/cluster-matlab -m $HOSTNAME | wc -l`
nodenum=`$LMSTAT | grep $HOSTNAME | wc -l`

# count the number of matlab licenses in use by other people on this mentat node
# othernum=`/opt/cluster/cluster-matlab -m $HOSTNAME | grep -v $USER | wc -l`
othernum=`$LMSTAT | grep $HOSTNAME | grep -v $USER | wc -l`

# count the number of matlab licenses in use by this user on this mentat only
thisnum=`$LMSTAT | grep $HOSTNAME | grep $USER | wc -l`

# count the number of matlab licenses in use by this user on all FCDC computers
usernum=`$LMSTAT | grep $USER | wc -l`

if [ "$cpucount" -eq 1 -a "$othernum" -eq 0 ]; then
  # this machine allows another matlab session
  # skip to the license count test below
  echo -n

elif [ "$USER" == public -a "$othernum" -eq 0 ]; then
  # this machine allows another matlab session
  # skip to the license count test below
  echo -n

elif [ "$cpucount" -eq 1 -a "$othernum" -ge 1 ]; then
  echo --------------------------------------------------------------------------------
  echo ERROR: You are not allowed to start a session on a machine that is already in use
  echo This machine has $cpucount CPUs and already has $nodenum matlab licenses in use
  echo Use \"cluster-matlab\" to get more information about the active matlab sessions
  echo See http://intranet/matlab.html for general information
  echo --------------------------------------------------------------------------------
  # this machine does not allow another matlab session
  exit 1

elif [ "$cpucount" -eq 2 -a "$othernum" -ge 2 ]; then
  echo --------------------------------------------------------------------------------
  echo ERROR: You are not allowed to start a session on a machine that is already in use
  echo This machine has $cpucount CPUs and already has $nodenum matlab licenses in use
  echo Use \"cluster-matlab\" to get more information about the active matlab sessions
  echo See http://intranet/matlab.html for general information
  echo --------------------------------------------------------------------------------
  # this machine does not allow another matlab session
  exit 1

elif [ "$cpucount" -eq 4 -a "$nodenum" -ge 4 ]; then
  echo --------------------------------------------------------------------------------
  echo ERROR: You are not allowed to start a session on a machine that is already in use
  echo This machine has $cpucount CPUs and already has $nodenum matlab licenses in use
  echo Use \"cluster-matlab\" to get more information about the active matlab sessions
  echo See http://intranet/matlab.html for general information
  echo --------------------------------------------------------------------------------
  # this machine does not allow another matlab session
  exit 1

elif [ "$cpucount" -ge 4 -a "$nodenum" -gt "$othernum" -a "$memcount" -gt 16000000 ]; then
  echo --------------------------------------------------------------------------------
  echo ERROR: You are not allowed to run more than one session on the big-memory machines
  echo This machine has $cpucount CPUs and already has $nodenum matlab licenses in use
  echo Use \"cluster-matlab\" to get more information about the active matlab sessions
  echo See http://intranet/matlab.html for general information
  echo --------------------------------------------------------------------------------
  # this machine does not allow another matlab session
  exit 1
fi

if [ "$USER" == "public" ] ; then
  # this should roughly correspond to the number of mentats with public peerslaves
  # otherwise those peerslaves cannot be started
  usermax=18
else
  usermax=4
fi

begtime=8
endtime=19
curtime=`date +"%k"`
curday=`date +"%u"`

if [ "$curday" -le 5 -a "$curtime" -ge "$begtime" -a "$curtime" -lt "$endtime" ] ; then
  if [ "$thisnum" -ge 1 ] ; then 
    # the user is allowed to start a new matlab on a mentat where he already is using a matlab
    # two matlabs on one mentat by the same user costs only a single license
    exit 0
  fi
  if [ "$usernum" -ge "$usermax" ] ; then 
    echo --------------------------------------------------------------------------------
    echo ERROR: You are not allowed to use more than "$usermax" matlab licenses during office hours \("$begtime"-"$endtime"\)
    echo You already have $usernum matlab licenses in use
    echo Use \"cluster-matlab\" to get more information about the active matlab sessions
    echo See http://intranet/matlab.html for general information
    echo --------------------------------------------------------------------------------
    # the user is not allowed to start another matlab session
    exit 1
  fi
fi

echo --------------------------------------------------------------------------------
echo This machine has $cpucount CPUs and already has $nodenum matlab licenses in use
echo You already have $usernum matlab licenses in use
echo Use \"cluster-matlab\" to get more information about the active matlab sessions
echo See http://intranet/matlab.html for general information
echo --------------------------------------------------------------------------------

# the user is allowed to start another matlab version
exit 0

