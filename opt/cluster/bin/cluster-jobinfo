#!/bin/sh
#
# print the requested, used and remaining walltime on screen
# print the requested and used memory on screen
#
# History
# edwger 11jan2016 - use ps for calculating mem-usage if cluster-jobinfo is
#                    running from jobs exec-host, else use qstat
# honlee 14jan2014 - calculate used and remaining walltime in respect of
#                    the CPU speed 
# roboos 14oct2012 - created

function bytes {
# convert GB, MB and KB to bytes using the trailing indicator
if [ -n "$1" ]; then
echo $1 | awk '/[gG][bB]$/ {sub("[gG][bB]", "", $1); print 1024*1024*1024*$1}; /[mM][bB]$/ {sub("[mM][bB]", "", $1); print 1024*1024*$1}; /[kK][bB]$/ {sub("[kK][bB]", "", $1); print 1024*$1}; /[bB]$/ {sub("[bB]", "", $1); print $1}'
else
echo 0
fi
}

function megabytes {
# convert bytes to MB
if [ -n "$1" ]; then
echo "$1/(1024*1024)" | bc
else
echo 0
fi
}

function convertsecs {
# convert seconds into HH:MM:SS format 

    sec=`echo "($1+0.5)/1" | bc`

    h=`echo "$sec / 3600" | bc`
    m=`echo "$sec % 3600 / 60" | bc`
    s=`echo "$sec % 60" | bc`
    printf "%02d:%02d:%02d\n" $h $m $s
}

##############################################################################
# the actual script starts here
##############################################################################

if [ -z "$PBS_JOBID" ] ; then 
exit 1
fi

##############################################################################
# determine the time
##############################################################################
#used=`     qstat -f $PBS_JOBID | grep -i resources_used.walltime | cut -d = -f 2`
#remaining=`qstat -f $PBS_JOBID | grep -i Walltime.Remaining      | cut -d = -f 2`
## getting scale factor for CPU speed
host=`qstat -f $PBS_JOBID | grep 'exec_host' | awk -F ' = ' '{print $NF}' | awk -F '/' '{print $1}'`

if [ $host ]; then
    speed=`cluster-torqueconfig | grep NODECFG | grep SPEED | grep $host | awk '{print $2}' | sed 's/SPEED=\(.*\)/\1/' | uniq`
fi

if [ -z $speed ]; then
    speed=1.0
fi

## getting the requested walltime
requested=`qstat -f $PBS_JOBID | grep -i Resource_List.walltime  | awk -F ' = ' '{print $NF}'`
requested=$(( `date --date="$requested" +%s` - `date --date=00:00:00 +%s` ))

## calculating the used walltime
start_t=`qstat -f $PBS_JOBID | grep -i start_time | awk -F ' = ' '{print $NF}'`
stop_t=`qstat -f $PBS_JOBID | grep -i comp_time | awk -F ' = ' '{print $NF}'`
if [ "s" == s"$start_t" ]; then
    # job not started yet
    used=0
elif [ "s" == s"$stop_t" ]; then
    # job still running
    used=$(( `date +%s` - `date --date="$start_t" +%s` ))
else
    # job has complete (no need to scale with the CPU speed)
    used=$(( `date --date="$stop_t" +%s` - `date --date="$start_t" +%s` ))
fi

## scaling the requested and used time with CPU speed
#requested=`echo "$requested / $speed" | bc`
#if [ "s" == s"$stop_t" ]; then
#    used=`echo "$used * $speed" | bc`
#fi
used=`echo "$used * $speed" | bc`

# calculating the actual remaining time 
remaining=`echo "$requested - $used" | bc`
if [ `echo "$remaining < 0" | bc` -eq 1 ]; then
    remaining=0
fi

echo ""
printf "Requested walltime %16s\n" `convertsecs $requested`
printf "Used walltime      %16s\n" `convertsecs $used`
printf "Remaining walltime %16s\n" `convertsecs $remaining`

##############################################################################
# determine the memory
##############################################################################

#    resources_used.mem = 55120kb
#    resources_used.vmem = 350964kb
#    Resource_List.mem = 4gb
#    submit_args = -I -l walltime=4:00:00,mem=4gb

# Determine if current hostname is the same as where the job is running
current_host=`echo ${HOSTNAME%%.*}`
job_host=`qstat -f $PBS_JOBID | grep -v grep | grep exec_host | awk -F' ' '{ print $3 }' | cut -d'.' -f1`

#echo $current_host
#echo $job_host

requestedmem=` qstat -f $PBS_JOBID | grep -i Resource_List.mem   | cut -d = -f 2`
#requestedvmem=`qstat -f $PBS_JOBID | grep -i Resource_List.vmem  | cut -d = -f 2`

if [ "$current_host" == "$job_host" ]
then
   usedmem=`       ps -eHo pid,pgid,sid,user,rss,vsz | grep $thispgid | grep $USER | awk '{s=s+$5}END{print s"kb"}' 2>/dev/null`
else
   usedmem=`      qstat -f $PBS_JOBID | grep -i resources_used.mem  | cut -d = -f 2`
fi

#usedvmem=`     qstat -f $PBS_JOBID | grep -i resources_used.vmem | cut -d = -f 2`
#usedvmem=`      ps -eHo pid,pgid,sid,user,rss,vsz | grep $thispgid | grep $USER | awk '{s=s+$6}END{print s"kb"}' 2>/dev/null`

requestedmem=` bytes $requestedmem`
#requestedvmem=`bytes $requestedvmem`
usedmem=`      bytes $usedmem`
#usedvmem=`     bytes $usedvmem`

echo ""
printf "Requested memory         %7s MB\n" `megabytes $requestedmem  `
printf "Used memory              %7s MB\n" `megabytes $usedmem       `
#printf "Requested virtual memory %7s MB\n" `megabytes $requestedvmem `
#printf "Used virtual memory      %7s MB\n" `megabytes $usedvmem      `

##############################################################################
# print some further instructions
##############################################################################

echo ""
echo "You can get more information about this job with the following command"
echo "qstat -f $PBS_JOBID"
echo ""

